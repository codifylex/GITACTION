name: teste.codifylex deployment

on:
  push:
    branches:
      - main
      - dev
  release:
    types: [created] # Dispara quando uma release é criada

jobs:
  # Atualizar o código da branch main
  deploy-main:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Repo Checkout
        uses: actions/checkout@v1
      - name: Hostgator Deployment
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{secrets.SERVER_SSH_KEY}}
          ARGS: "-rlgoDz --delete"
          SOURCE: "/"
          REMOTE_HOST: ${{vars.REMOTE_HOST}}
          REMOTE_USER: ${{vars.REMOTE_USER}}
          TARGET: ${{vars.TARGET}}

  # Atualizar o código de homologação (HML) quando uma release for criada
  deploy-homologation:
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    steps:
      - name: Repo Checkout
        uses: actions/checkout@v1
      - name: Hostgator Deployment
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{secrets.SERVER_SSH_KEY}}
          ARGS: "-rlgoDz --delete"
          SOURCE: "/"
          REMOTE_HOST: ${{vars.REMOTE_HOST}}
          REMOTE_USER: ${{vars.REMOTE_USER}}
          TARGET: ${{vars.TARGET}}

  # Atualizar o código da branch dev
  deploy-development:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev' && github.event_name == 'push'
    steps:
      - name: Repo Checkout
        uses: actions/checkout@v1
      - name: Hostgator Deployment
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{secrets.SERVER_SSH_KEY}}
          ARGS: "-rlgoDz --delete"
          SOURCE: "/"
          REMOTE_HOST: ${{vars.REMOTE_HOST}}
          REMOTE_USER: ${{vars.REMOTE_USER}}
          TARGET: ${{vars.TARGET}}
